#!/bin/bash
# Nginx 1.9.9 + * Modules.
# Author RAW. // systemroot.me
##########################
# ==============================================
# Check..
# ==============================================
checks() {
           if [ "$(whoami)" != "root" ]
           then
               echo "You should Login as root to use this script!";
               echo "May you already have access for sudo, but commands aren't designed with sudo! so..";
               echo "sudo -i";
               exit 1
           fi

           if [ -d "/nginx/sites" ]; then
               echo "We've detect a folder '/nginx/sites' which means"
               echo "Maybe you have use this script before!"
               echo "You can fix this by executing!"
               echo "./setup clean"
               exit 1
           fi

           if [ -d "/etc/nginx" ]; then
               echo "We've detect a folder '/etc/nginx' which means"
               echo "Maybe you have use this script before!"
               echo "./setup clean"
               exit 1
           fi

           if [ -d "/opt/nginx/" ]; then
               echo "We've detect a folder '/opt/nginx/' which means"
               echo "Maybe you have use this script before!"
               echo "./setup clean"
               exit 1
           fi
}
# ==============================================
# ==============================================

# ==============================================
# PACKS.
# ==============================================
packs() {
           apt-get update; apt-get upgrade -y; apt-get dist-upgrade -y
           apt-get autoremove -y
           apt-get install apt-utils build-essential -y
           apt-get install git -y
           apt-get install checkinstall libpcre3 libpcre3-dev zlib1g zlib1g-dbg libxml2 zlib1g-dev -y
           apt-get install -y unzip
           apt-get install -y libicu-dev libcurl4-gnutls-dev libtool
           apt-get install -y libmozjs-24-dev
           apt-get install -y libmozjs-24-bin; sudo ln -sf /usr/bin/js24 /usr/bin/js
           apt-get install openssl libssl-dev libperl-dev libexpat-dev -y
           apt-get install mercurial meld -y
           apt-get install libxslt-dev -y
           apt-get install libgd2-xpm -y
           apt-get install libgd2-xpm-dev -y
           apt-get install libgeoip-dev -y
           apt-get install libssl libssl-dev -y
           apt-get install dh-autoreconf -y
           apt-get install -y software-properties-common
           apt-get install -y python-software-properties
           apt-get install -y libcairo2 libcairo2-dev
           apt-get install -y python-dev
           sudo add-apt-repository ppa:maxmind/ppa -y
           apt-get install aptitude -y
           aptitude update -y
           aptitude upgrade -y
           aptitude install libmaxminddb0 libmaxminddb-dev mmdb-bin -y
           apt-get install libmysqlclient-dev -y
           apt-get install libmariadbclient-dev -y
           apt-get install g++ flex bison curl doxygen libyajl-dev libgeoip-dev libtool dh-autoreconf libcurl4-gnutls-dev libxml2 libpcre++-dev libxml2-dev -y
}


#Dirs!
dirs() {
           mkdir -p /nginx
           mkdir -p /hostdata/
           mkdir -p /var/log/nginx/
           mkdir -p /opt/nginx/modules/
}

#Modules.
libs() {
           cd /opt/
           git clone https://github.com/SpiderLabs/ModSecurity
           cd /opt/ModSecurity/
           git checkout -b v3/master origin/v3/master
           sh build.sh
           git submodule init
           git submodule update
           ./configure
           make -j`nproc`
           make install
           
           cd /opt/nginx/modules/
           git clone https://github.com/ildus/nginx_redis.git
           cd nginx_redis/
           mv ngx_devel_kit-0.2.19/ /opt/nginx/modules/
           
           cd /opt/nginx/modules/
           wget https://github.com/pagespeed/ngx_pagespeed/archive/v1.12.34.2-beta.zip
           unzip v1.12.34.2-beta.zip
           rm -Rf v1.12.34.2-beta.zip

           #Pagespeed Library
           cd /opt/nginx/modules/ngx_pagespeed-1.12.34.2-beta
           wget https://dl.google.com/dl/page-speed/psol/1.12.34.2-x64.tar.gz
           tar -xzvf 1.12.34.2-x64.tar.gz

           #LuaJIT Library
           cd /opt/nginx/modules/
           git clone http://luajit.org/git/luajit-2.0.git
           cd luajit-2.0/
           make -j`nproc`
           sudo make install
           ldconfig
}

clones(){
           cd /opt/nginx/modules/
           rm -Rf nginx_redis/
           cd /opt/nginx/modules/
           git clone https://github.com/openresty/set-misc-nginx-module.git
           git clone https://github.com/vozlt/nginx-module-vts.git
           git clone https://github.com/FRiCKLE/ngx_cache_purge.git
           git clone https://github.com/kyprizel/testcookie-nginx-module.git
           git clone https://github.com/openresty/headers-more-nginx-module.git
           git clone https://github.com/openresty/echo-nginx-module.git
           git clone https://github.com/arut/nginx-dav-ext-module.git
           git clone https://github.com/masterzen/nginx-upload-progress-module.git
           git clone https://github.com/nginx-clojure/nginx-access-plus.git
           git clone https://github.com/leev/ngx_http_geoip2_module.git
           git clone https://github.com/flant/nginx-http-rdns.git
           git clone https://github.com/dizballanze/ngx_http_avatars_gen_module.git
           git clone https://github.com/openresty/lua-nginx-module.git

           #NEW
           git clone https://github.com/arut/nginx-mtask-module.git
           git clone https://github.com/arut/nginx-mysql-module.git
           git clone https://github.com/SpiderLabs/ModSecurity-nginx.git
           # Something is wrong with ipset! don't use it if you don't know how to fix.
           # Error is that page takes forever on "loading..."
           # git clone https://github.com/Vasfed/nginx_ipset_blacklist.git
           git clone https://github.com/openresty/encrypted-session-nginx-module.git
           git clone https://github.com/Qihoo360/ngx_http_subrange_module.git
           #END-NEW

           # Download Nginx 1.9.9
           mkdir -p /opt/nginx/sources/
           cd /opt/nginx/sources/
           wget 'http://nginx.org/download/nginx-1.9.9.tar.gz'
           tar -xzvf nginx-1.9.9.tar.gz
           rm -Rf nginx-1.9.9.tar.gz
}

confbu() {
cat <<EOF > /opt/nginx/sources/nginx-1.9.9/build.sh
./configure \
--user=nginx \
--group=nginx \
--sbin-path=/usr/sbin/nginx           \
--conf-path=/nginx/nginx.conf     \
--pid-path=/var/run/nginx.pid         \
--lock-path=/var/run/nginx.lock       \
--error-log-path=/var/log/nginx/error.log \
--http-log-path=/var/log/nginx/access.log \
--with-pcre                           \
--with-http_geoip_module \
--with-http_gunzip_module \
--with-http_gzip_static_module \
--with-http_image_filter_module \
--with-http_secure_link_module \
--with-http_sub_module \
--with-http_xslt_module \
--with-http_ssl_module \
--with-http_stub_status_module \
--with-http_realip_module \
--with-stream \
--with-stream_ssl_module \
--with-threads \
--with-http_dav_module \
--with-ld-opt="-Wl,-rpath,/usr/local/lib/" \
--add-module=/opt/nginx/modules/ngx_devel_kit-0.2.19 \
--add-module=/opt/nginx/modules/ngx_pagespeed-1.12.34.2-beta \
--add-module=/opt/nginx/modules/testcookie-nginx-module \
--add-module=/opt/nginx/modules/set-misc-nginx-module \
--add-module=/opt/nginx/modules/headers-more-nginx-module \
--add-module=/opt/nginx/modules/echo-nginx-module \
--add-module=/opt/nginx/modules/nginx-access-plus/src/c \
--add-module=/opt/nginx/modules/nginx-dav-ext-module \
--add-module=/opt/nginx/modules/nginx-module-vts \
--add-module=/opt/nginx/modules/ngx_cache_purge \
--add-module=/opt/nginx/modules/ngx_http_geoip2_module \
--add-module=/opt/nginx/modules/ngx_http_avatars_gen_module \
--add-module=/opt/nginx/modules/nginx-http-rdns \
--add-module=/opt/nginx/modules/lua-nginx-module \
--add-module=/opt/nginx/modules/nginx-mtask-module \
--add-module=/opt/nginx/modules/nginx-mysql-module \
--add-module=/opt/nginx/modules/ModSecurity-nginx \
--add-module=/opt/nginx/modules/encrypted-session-nginx-module \
--add-module=/opt/nginx/modules/ngx_http_subrange_module \
--add-module=/opt/nginx/modules/nginx-upload-progress-module
EOF
}



# ============================================================================== #
# CLEAN.
# ============================================================================== #
RMD() {
        rm -Rf /opt/nginx
        rm -Rf /nginx
        rm -Rf /hostdata
        rm -Rf /tmp/*
        rm -Rf /etc/nginx
        rm -Rf /etc/init.d/nginx
        rm -Rf /usr/sbin/nginx
        rm -Rf /bin/nginx
}
# ============================================================================== #
# END-CLEAN.
# ============================================================================== #

# ============================================================================== #
# FIX.
# ============================================================================== #
FIX0() {
        cd /tmp/
        wget https://raw.githubusercontent.com/systemroot/my-nginx/master/nginx-as-firewall/pre-fix
        wget https://raw.githubusercontent.com/systemroot/my-nginx/master/nginx-as-firewall/fix
        chmod +x /tmp/pre-fix
        chmod +x /tmp/fix
        sh /tmp/pre-fix
        sh /tmp/fix
        rm -Rf /tmp/*
        
}
# ============================================================================== #
# END-FIX.
# ============================================================================== #

if [ "$1" == 'install' ]; then
   clear; ldconfig
   checks; packs; dirs; clones; libs; confbu;
   ldconfig
   cd /opt/nginx/sources/nginx-1.9.9/
   chmod +x build.sh
   ./build.sh
   make -j`nproc`
   make install
   ldconfig
   clear
   echo "Installation Done!"
   echo "Please execute ./setup fix"
   echo "So we can fix nginx bin, dirs, and other stuff"
fi

if [ "$1" == 'clean' ]; then
   RMD;
   clear
   echo "We've remove everything which was installed via './setup install'"
   echo "You can now retry ./setup install"
fi

if [ "$1" == 'fix' ]; then
   FIX0;
fi

