#!/bin/bash


REQS() {
         apt-get update -y
         apt-get upgrade -y
         apt-get dist-upgrade -y
         apt-get install apt-utils build-essential -y
         apt-get install git -y
         apt-get install checkinstall libpcre3 libpcre3-dev zlib1g zlib1g-dbg libxml2 zlib1g-dev -y
         apt-get install -y unzip
         apt-get install -y libicu-dev libcurl4-gnutls-dev libtool
         apt-get install -y libmozjs-24-dev
         apt-get install -y libmozjs-24-bin; sudo ln -sf /usr/bin/js24 /usr/bin/js
         apt-get install openssl libssl-dev libperl-dev libexpat-dev -y
         apt-get install mercurial meld -y
         apt-get install libxslt-dev -y
         apt-get install libgd2-xpm -y
         apt-get install libgd2-xpm-dev -y
         apt-get install libgeoip-dev -y
         apt-get install libssl libssl-dev -y
         apt-get install dh-autoreconf -y
         apt-get install -y software-properties-common
         apt-get install -y python-software-properties
         apt-get install -y libcairo2 libcairo2-dev
         apt-get install -y python-dev
         sudo add-apt-repository ppa:maxmind/ppa -y
         apt-get install aptitude -y
         aptitude update -y
         aptitude upgrade -y
         aptitude install libmaxminddb0 libmaxminddb-dev mmdb-bin -y
}

DIRS() {
         mkdir -p /nginx
         mkdir -p /nginx/live/
         mkdir -p /nginx/logs/
         mkdir -p /nginx/cache/
         mkdir -p /hostdata/default/root/
         mkdir -p /hostdata/default/logs/
         mkdir -p /hostdata/default/ssl/
         mkdir -p /hostdata/default/cache/
         
         # WORKDIRS.
         mkdir -p /opt/nginx/modules/
         mkdir -p /opt/nginx/sources/
         mkdir -p /opt/nginx/xvideo/
}

FFMPEG() {
         apt-get update; apt-get upgrade -y
         apt-get dist-upgrade -y; apt-get autoremove -y
         apt-get install build-essential libssl-dev curl libssl-dev openssl git curl nano zip unzip -y
         apt-get install cmake-curses-gui -y
         apt-get remove ffmpeg x264 libav-tools libvpx-dev libx264-dev -y
         apt-get install sudo apt-get install libav-tools -y
         apt-get autoremove -y; apt-get update
         apt-get -y install build-essential checkinstall git libfaac-dev libgpac-dev \
           libjack-jackd2-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev \
           librtmp-dev libsdl1.2-dev libtheora-dev libva-dev libvdpau-dev libvorbis-dev \
           libx11-dev libxfixes-dev pkg-config texi2html yasm zlib1g-dev
         apt-get -y install build-essential checkinstall git libfaac-dev libgpac-dev \
           libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev librtmp-dev libtheora-dev \
           libvorbis-dev pkg-config texi2html yasm zlib1g-dev
         apt-get update; apt-get autoremove -y; apt-get update
         cd /opt/nginx/xvideo/
         git clone http://git.videolan.org/git/x264.git
         cd x264/
         ./configure --enable-shared --enable-static
         make -j`nproc`
         checkinstall --pkgname=x264 --pkgversion="3:$(./version.sh | \
           awk -F'[" ]' '/POINT/{print $4"+git"$5}')" --backup=no --deldoc=yes \
           --fstrans=no --default
         cd /opt/nginx/xvideo/
         wget http://downloads.sourceforge.net/opencore-amr/fdk-aac-0.1.5.tar.gz
         tar xzvf fdk-aac-0.1.5.tar.gz; rm -Rf fdk-aac-0.1.5.tar.gz; cd fdk-aac-0.1.5/
         ./configure
         make -j`nproc`
         sudo checkinstall --pkgname=fdk-aac --pkgversion="0.1.5" --backup=no \
           --deldoc=yes --fstrans=no --default
         sudo add-apt-repository ppa:mc3man/trusty-media -y
         sudo apt-get update; apt-get upgrade -y; apt-get dist-upgrade -y; apt-get autoremove -y
         sudo apt-get install ffmpeg gstreamer0.10-ffmpeg -y
}

NGINX() {
         cd /opt/nginx/sources/
         wget 'http://nginx.org/download/nginx-1.9.9.tar.gz'
         tar -xzvf nginx-1.9.9.tar.gz
         rm -Rf nginx-1.9.9.tar.gz
         cd nginx*
         wget https://raw.githubusercontent.com/theraw/my-nginx/master/nginx-as-stream-server/helper/build.sh
         chmod +x build.sh
         ./build.sh
}

FIXNGINX() {
         
}

MODULES() {
         cd /opt/nginx/modules/
         wget
         chmod +x
         ./
}
